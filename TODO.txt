 _____ ___  ____   ___  
|_   _/ _ \|  _ \ / _ \ 
  | || | | | | | | | | |
  | || |_| | |_| | |_| |
  |_| \___/|____/ \___/ 
                        


Browser Widget
---------------
* Add a "full" view browser and a "compact" view. 
  - Add JS API to toggle mode
* Add a "Quick Links" block to the welcome page
  - Should we use the Websites listing? 
  - Add JS API to grab quick links

## I want to have a whole bookmarks system for link relevant
there are the standard places, and then specific bookmarks
per session..
Also a simple editor to "maintain" bookmarks..

The inbuilt browser need to be "clean" and specific to the task at hand.

Autosave
--------
We need to add an autosave function. Maybe use a QTimer to periodically save?
* Add Autosave
* Add crash handler
* Add recovery wizard

Icons and Style
---------------------------
We Need a graphic designer to create the style, inspiration is #color, however in Qt its QtGui.QColor(125,12,3)
Its a bit of a mix and match application in the following. The issue is the "stle sheet"
* the inernal browser uses native html, and style sheet
* Qt widgets also use a setStyleSheet() but it has problems, eg setting a border on a wodget, will also set borders all all the kids
* tree's need to be set as an object. eg QtGui.QColor(125,12,3) ie not sing with "css"
* You can style a treeWidget, instead u need a delegate ?? umm


Events and Handlers
-----------------------------------------------------
* .Central event handler maybe - OSx style



Sessions
-----------------------------------------------------
Ability to "bookmark a session", such as open code, and the help pages, forum topics.


== Work In Progress ==

One of the benefits to Arduino would be the necessity of this project to create the API documentation.

Current scenariio is that a website must be browsed, and autocomplete is independant.

The solution is to document the api's which are stored as yaml. If utulised then this will hopefully feed its
way into the arduino mother project. There is a simple interface to document the api.

The yaml solutions serves a simple purpose.

For autocompletion to work, the following would be simple:

pinMode(pin, mode) set pin to INPUT or OUTPUT mode

However for Serial.write the following sould be needed
Serial.write() write to serial port
write() write an blank line
write(foo) write foo
write(foo, HEX) write HEX as x y z

1) documents a "function", or class, arduino itself is a "core" class whilst "servo" is standard, and other contrib. This means function are on demand (antone remember the MSDN documentation....) ie only there when required
2) a list of keywords such as INPUT, OUTPUT so it hightlights (to research is internal functions)
3) a one liner of its functionallity



== Thoughts ==

Use google appengine to distribute the documantation and libs.. an distribution machine for all of us.



